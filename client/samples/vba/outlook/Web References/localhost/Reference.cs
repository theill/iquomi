//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace IquomiAddIn.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://services.iquomi.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseResponseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseRequestType))]
    public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public AuthenticationType AuthenticationTypeValue;
        
        public RequestType RequestTypeValue;
        
        /// <remarks/>
        public Service() {
            this.Url = "http://services.iquomi.com/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/Insert", RequestNamespace="http://services.iquomi.com/", ResponseNamespace="http://services.iquomi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseType Insert(InsertRequestType req) {
            object[] results = this.Invoke("Insert", new object[] {
                        req});
            return ((InsertResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsert(InsertRequestType req, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Insert", new object[] {
                        req}, callback, asyncState);
        }
        
        /// <remarks/>
        public InsertResponseType EndInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((InsertResponseType)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/Delete", RequestNamespace="http://services.iquomi.com/", ResponseNamespace="http://services.iquomi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeleteResponseType Delete(DeleteRequestType req) {
            object[] results = this.Invoke("Delete", new object[] {
                        req});
            return ((DeleteResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelete(DeleteRequestType req, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delete", new object[] {
                        req}, callback, asyncState);
        }
        
        /// <remarks/>
        public DeleteResponseType EndDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeleteResponseType)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/Replace", RequestNamespace="http://services.iquomi.com/", ResponseNamespace="http://services.iquomi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplaceResponseType Replace(ReplaceRequestType req) {
            object[] results = this.Invoke("Replace", new object[] {
                        req});
            return ((ReplaceResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReplace(ReplaceRequestType req, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Replace", new object[] {
                        req}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplaceResponseType EndReplace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReplaceResponseType)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/Update", RequestNamespace="http://services.iquomi.com/", ResponseNamespace="http://services.iquomi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseType Update(UpdateRequestType req) {
            object[] results = this.Invoke("Update", new object[] {
                        req});
            return ((UpdateResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdate(UpdateRequestType req, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Update", new object[] {
                        req}, callback, asyncState);
        }
        
        /// <remarks/>
        public UpdateResponseType EndUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UpdateResponseType)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/Query", RequestNamespace="http://services.iquomi.com/", ResponseNamespace="http://services.iquomi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryResponseType Query(QueryRequestType req) {
            object[] results = this.Invoke("Query", new object[] {
                        req});
            return ((QueryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuery(QueryRequestType req, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Query", new object[] {
                        req}, callback, asyncState);
        }
        
        /// <remarks/>
        public QueryResponseType EndQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QueryResponseType)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.iquomi.com/", IsNullable=false)]
    public class AuthenticationType : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string Iqid;
        
        /// <remarks/>
        public string Password;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class QueryResponseType {
        
        /// <remarks/>
        public XpQueryResponseType[] XpQueryResponses;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class XpQueryResponseType : BaseResponseType {
        
        /// <remarks/>
        public object Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XpQueryResponseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateBlockStatusType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReplaceResponseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeleteResponseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertResponseType))]
    public class BaseResponseType {
        
        /// <remarks/>
        public int SelectedNodeCount;
        
        /// <remarks/>
        public ResponseStatus Status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public enum ResponseStatus {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Rollback,
        
        /// <remarks/>
        NotAttempted,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class UpdateBlockStatusType : BaseResponseType {
        
        /// <remarks/>
        public InsertResponseType[] InsertResponses;
        
        /// <remarks/>
        public DeleteResponseType[] DeleteResponses;
        
        /// <remarks/>
        public ReplaceResponseType[] ReplaceResponses;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class InsertResponseType : BaseResponseType {
        
        /// <remarks/>
        public NewIdType[] NewIds;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class NewIdType {
        
        /// <remarks/>
        public string Id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class DeleteResponseType : BaseResponseType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class ReplaceResponseType : BaseResponseType {
        
        /// <remarks/>
        public NewIdType[] NewIds;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class RangeType {
        
        /// <remarks/>
        public string First;
        
        /// <remarks/>
        public int Count;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class SortType {
        
        /// <remarks/>
        public SortTypeDirection Direction;
        
        /// <remarks/>
        public string Key;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public enum SortTypeDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class QueryOptionsType {
        
        /// <remarks/>
        public SortType[] Sort;
        
        /// <remarks/>
        public RangeType[] Range;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class QueryRequestType {
        
        /// <remarks/>
        public XpQueryType[] XpQueries;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class XpQueryType : BaseRequestType {
        
        /// <remarks/>
        public QueryOptionsType[] Options;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XpQueryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReplaceRequestType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeleteRequestType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertRequestType))]
    public class BaseRequestType {
        
        /// <remarks/>
        public string Select;
        
        /// <remarks/>
        public MinOccursType MinOccurs;
        
        /// <remarks/>
        public MaxOccursType MaxOccurs;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class MinOccursType {
        
        /// <remarks/>
        public int Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class MaxOccursType {
        
        /// <remarks/>
        public int Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class ReplaceRequestType : BaseRequestType {
        
        /// <remarks/>
        public UseClientIdsType UseClientIds;
        
        /// <remarks/>
        public AttributeType[] Attributes;
        
        /// <remarks/>
        public object Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class UseClientIdsType {
        
        /// <remarks/>
        public bool Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class AttributeType {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class DeleteRequestType : BaseRequestType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class InsertRequestType : BaseRequestType {
        
        /// <remarks/>
        public UseClientIdsType UseClientIds;
        
        /// <remarks/>
        public AttributeType[] Attributes;
        
        /// <remarks/>
        public object Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class UpdateResponseType {
        
        /// <remarks/>
        public UpdateBlockStatusType[] UpdateBlockStatuses;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class UpdateBlockType {
        
        /// <remarks/>
        public string Select;
        
        /// <remarks/>
        public UpdateBlockOnErrorType OnError;
        
        /// <remarks/>
        public InsertRequestType[] InsertRequests;
        
        /// <remarks/>
        public DeleteRequestType[] DeleteRequests;
        
        /// <remarks/>
        public ReplaceRequestType[] ReplaceRequests;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public enum UpdateBlockOnErrorType {
        
        /// <remarks/>
        RollbackBlockAndFail,
        
        /// <remarks/>
        RollbackBlockAndContinue,
        
        /// <remarks/>
        Ignore,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public class UpdateRequestType {
        
        /// <remarks/>
        public UpdateBlockType[] UpdateBlocks;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.iquomi.com/", IsNullable=false)]
    public class RequestType : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string Service;
        
        /// <remarks/>
        public string Method;
        
        /// <remarks/>
        public string OwnerIqid;
        
        /// <remarks/>
        public GenResponseType GenResponse;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/")]
    public enum GenResponseType {
        
        /// <remarks/>
        Always,
        
        /// <remarks/>
        Never,
        
        /// <remarks/>
        FaultOnly,
    }
}
