//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50215.44
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50215.44.
// 
namespace Commanigy.Iquomi.Store.IqAlertsRef {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IqAlertsSoap", Namespace="http://services.iquomi.com/2004/01/iqAlerts")]
    public partial class IqAlerts : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VoidOperationCompleted;
        
        private SoapAuthenticationType soapAuthenticationTypeValueField;
        
        private SoapRequestType soapRequestTypeValueField;
        
        private System.Threading.SendOrPostCallback NotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebugListUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListenResponseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IqAlerts() {
            this.Url = Commanigy.Iquomi.Store.Properties.Settings.Default.Commanigy_Iquomi_Store_IqAlertsRef_IqAlerts;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SoapAuthenticationType SoapAuthenticationTypeValue {
            get {
                return this.soapAuthenticationTypeValueField;
            }
            set {
                this.soapAuthenticationTypeValueField = value;
            }
        }
        
        public SoapRequestType SoapRequestTypeValue {
            get {
                return this.soapRequestTypeValueField;
            }
            set {
                this.soapRequestTypeValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VoidCompletedEventHandler VoidCompleted;
        
        /// <remarks/>
        public event NotifyCompletedEventHandler NotifyCompleted;
        
        /// <remarks/>
        public event DebugListUsersCompletedEventHandler DebugListUsersCompleted;
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event ReplaceCompletedEventHandler ReplaceCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event ListenResponseCompletedEventHandler ListenResponseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Void", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Void(IqAlertsType a) {
            this.Invoke("Void", new object[] {
                        a});
        }
        
        /// <remarks/>
        public void VoidAsync(IqAlertsType a) {
            this.VoidAsync(a, null);
        }
        
        /// <remarks/>
        public void VoidAsync(IqAlertsType a, object userState) {
            if ((this.VoidOperationCompleted == null)) {
                this.VoidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidOperationCompleted);
            }
            this.InvokeAsync("Void", new object[] {
                        a}, this.VoidOperationCompleted, userState);
        }
        
        private void OnVoidOperationCompleted(object arg) {
            if ((this.VoidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Notify", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("NotifyResponse", Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
        public NotifyResponseType Notify([System.Xml.Serialization.XmlElementAttribute("Notify", Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")] NotifyType Notify1) {
            object[] results = this.Invoke("Notify", new object[] {
                        Notify1});
            return ((NotifyResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyAsync(NotifyType Notify1) {
            this.NotifyAsync(Notify1, null);
        }
        
        /// <remarks/>
        public void NotifyAsync(NotifyType Notify1, object userState) {
            if ((this.NotifyOperationCompleted == null)) {
                this.NotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyOperationCompleted);
            }
            this.InvokeAsync("Notify", new object[] {
                        Notify1}, this.NotifyOperationCompleted, userState);
        }
        
        private void OnNotifyOperationCompleted(object arg) {
            if ((this.NotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyCompleted(this, new NotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/DebugListUsers", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DebugListUsers() {
            object[] results = this.Invoke("DebugListUsers", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DebugListUsersAsync() {
            this.DebugListUsersAsync(null);
        }
        
        /// <remarks/>
        public void DebugListUsersAsync(object userState) {
            if ((this.DebugListUsersOperationCompleted == null)) {
                this.DebugListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugListUsersOperationCompleted);
            }
            this.InvokeAsync("DebugListUsers", new object[0], this.DebugListUsersOperationCompleted, userState);
        }
        
        private void OnDebugListUsersOperationCompleted(object arg) {
            if ((this.DebugListUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugListUsersCompleted(this, new DebugListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Insert", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("InsertResponse", Namespace="http://schemas.iquomi.com/2004/01/core")]
        public InsertResponseType Insert([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] InsertRequestType InsertRequest) {
            object[] results = this.Invoke("Insert", new object[] {
                        InsertRequest});
            return ((InsertResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(InsertRequestType InsertRequest) {
            this.InsertAsync(InsertRequest, null);
        }
        
        /// <remarks/>
        public void InsertAsync(InsertRequestType InsertRequest, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        InsertRequest}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Delete", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteResponse", Namespace="http://schemas.iquomi.com/2004/01/core")]
        public DeleteResponseType Delete([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] DeleteRequestType DeleteRequest) {
            object[] results = this.Invoke("Delete", new object[] {
                        DeleteRequest});
            return ((DeleteResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(DeleteRequestType DeleteRequest) {
            this.DeleteAsync(DeleteRequest, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(DeleteRequestType DeleteRequest, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        DeleteRequest}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Replace", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReplaceResponse", Namespace="http://schemas.iquomi.com/2004/01/core")]
        public ReplaceResponseType Replace([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] ReplaceRequestType ReplaceRequest) {
            object[] results = this.Invoke("Replace", new object[] {
                        ReplaceRequest});
            return ((ReplaceResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceAsync(ReplaceRequestType ReplaceRequest) {
            this.ReplaceAsync(ReplaceRequest, null);
        }
        
        /// <remarks/>
        public void ReplaceAsync(ReplaceRequestType ReplaceRequest, object userState) {
            if ((this.ReplaceOperationCompleted == null)) {
                this.ReplaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceOperationCompleted);
            }
            this.InvokeAsync("Replace", new object[] {
                        ReplaceRequest}, this.ReplaceOperationCompleted, userState);
        }
        
        private void OnReplaceOperationCompleted(object arg) {
            if ((this.ReplaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceCompleted(this, new ReplaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Update", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UpdateResponse", Namespace="http://schemas.iquomi.com/2004/01/core")]
        public UpdateResponseType Update([System.Xml.Serialization.XmlArrayAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] [System.Xml.Serialization.XmlArrayItemAttribute("UpdateBlock", IsNullable=false)] UpdateBlockType[] UpdateRequest) {
            object[] results = this.Invoke("Update", new object[] {
                        UpdateRequest});
            return ((UpdateResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(UpdateBlockType[] UpdateRequest) {
            this.UpdateAsync(UpdateRequest, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(UpdateBlockType[] UpdateRequest, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        UpdateRequest}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/Query", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("QueryResponse", Namespace="http://schemas.iquomi.com/2004/01/core")]
        public QueryResponseType Query([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] QueryRequestType QueryRequest) {
            object[] results = this.Invoke("Query", new object[] {
                        QueryRequest});
            return ((QueryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(QueryRequestType QueryRequest) {
            this.QueryAsync(QueryRequest, null);
        }
        
        /// <remarks/>
        public void QueryAsync(QueryRequestType QueryRequest, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        QueryRequest}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapAuthenticationTypeValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("SoapRequestTypeValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.iquomi.com/2004/01/iqAlerts/ListenResponse", RequestNamespace="http://services.iquomi.com/2004/01/iqAlerts", ResponseNamespace="http://services.iquomi.com/2004/01/iqAlerts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListenResponse([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")] ListenTriggerType ListenTrigger) {
            this.Invoke("ListenResponse", new object[] {
                        ListenTrigger});
        }
        
        /// <remarks/>
        public void ListenResponseAsync(ListenTriggerType ListenTrigger) {
            this.ListenResponseAsync(ListenTrigger, null);
        }
        
        /// <remarks/>
        public void ListenResponseAsync(ListenTriggerType ListenTrigger, object userState) {
            if ((this.ListenResponseOperationCompleted == null)) {
                this.ListenResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListenResponseOperationCompleted);
            }
            this.InvokeAsync("ListenResponse", new object[] {
                        ListenTrigger}, this.ListenResponseOperationCompleted, userState);
        }
        
        private void OnListenResponseOperationCompleted(object arg) {
            if ((this.ListenResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListenResponseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if ((((wsUri.Port >= 1024) 
                        && (wsUri.Port <= 5000)) 
                        && (string.Compare(wsUri.Host, "localHost", true) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/2004/01/core")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.iquomi.com/2004/01/core", IsNullable=false)]
    public partial class SoapAuthenticationType : System.Web.Services.Protocols.SoapHeader {
        
        private string iqidField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Iqid {
            get {
                return this.iqidField;
            }
            set {
                this.iqidField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ListenTriggerType {
        
        private ListenTriggerTypeTriggerData triggerDataField;
        
        private ListenTriggerTypeContext contextField;
        
        /// <remarks/>
        public ListenTriggerTypeTriggerData TriggerData {
            get {
                return this.triggerDataField;
            }
            set {
                this.triggerDataField = value;
            }
        }
        
        /// <remarks/>
        public ListenTriggerTypeContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ListenTriggerTypeTriggerData {
        
        private ChangedBlueType changedBlueField;
        
        private DeletedBlueType deletedBlueField;
        
        /// <remarks/>
        public ChangedBlueType ChangedBlue {
            get {
                return this.changedBlueField;
            }
            set {
                this.changedBlueField = value;
            }
        }
        
        /// <remarks/>
        public DeletedBlueType DeletedBlue {
            get {
                return this.deletedBlueField;
            }
            set {
                this.deletedBlueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ChangedBlueType {
        
        private System.Xml.XmlElement[] anyField;
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class DeletedBlueType {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ListenTriggerTypeContext {
        
        private System.Xml.XmlElement[] anyField;
        
        private object[] itemsField;
        
        private string uriField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ChangeQueryResponseType {
        
        private ChangedBlueType[] changedBlueField;
        
        private DeletedBlueType[] deletedBlueField;
        
        private string baseChangeNumberField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChangedBlue")]
        public ChangedBlueType[] ChangedBlue {
            get {
                return this.changedBlueField;
            }
            set {
                this.changedBlueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DeletedBlue")]
        public DeletedBlueType[] DeletedBlue {
            get {
                return this.deletedBlueField;
            }
            set {
                this.deletedBlueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string BaseChangeNumber {
            get {
                return this.baseChangeNumberField;
            }
            set {
                this.baseChangeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum ResponseStatus {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Rollback,
        
        /// <remarks/>
        NotAttempted,
        
        /// <remarks/>
        AccessDenied,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class XpQueryResponseType {
        
        private System.Xml.XmlElement[] anyField;
        
        private object[] itemsField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class QueryResponseType {
        
        private XpQueryResponseType[] xpQueryResponseField;
        
        private ChangeQueryResponseType[] changeQueryResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("XpQueryResponse")]
        public XpQueryResponseType[] XpQueryResponse {
            get {
                return this.xpQueryResponseField;
            }
            set {
                this.xpQueryResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChangeQueryResponse")]
        public ChangeQueryResponseType[] ChangeQueryResponse {
            get {
                return this.changeQueryResponseField;
            }
            set {
                this.changeQueryResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ChangeQueryType {
        
        private QueryOptionsType optionsField;
        
        private string selectField;
        
        private string baseChangeNumberField;
        
        /// <remarks/>
        public QueryOptionsType Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string BaseChangeNumber {
            get {
                return this.baseChangeNumberField;
            }
            set {
                this.baseChangeNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class QueryOptionsType {
        
        private System.Xml.XmlElement[] anyField;
        
        private SortType[] sortField;
        
        private RangeType[] rangeField;
        
        private ShapeType shapeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sort")]
        public SortType[] Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Range")]
        public RangeType[] Range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public ShapeType Shape {
            get {
                return this.shapeField;
            }
            set {
                this.shapeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class SortType {
        
        private SortTypeDirection directionField;
        
        private string keyField;
        
        public SortType() {
            this.directionField = SortTypeDirection.Ascending;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(SortTypeDirection.Ascending)]
        public SortTypeDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum SortTypeDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class RangeType {
        
        private string firstField;
        
        private int countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ShapeType {
        
        private ShapeTypeType typeField;
        
        private string selectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ShapeTypeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum ShapeTypeType {
        
        /// <remarks/>
        Include,
        
        /// <remarks/>
        Exclude,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class XpQueryType {
        
        private QueryOptionsType optionsField;
        
        private string selectField;
        
        private int minOccursField;
        
        private bool minOccursFieldSpecified;
        
        private int maxOccursField;
        
        private bool maxOccursFieldSpecified;
        
        /// <remarks/>
        public QueryOptionsType Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinOccurs {
            get {
                return this.minOccursField;
            }
            set {
                this.minOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinOccursSpecified {
            get {
                return this.minOccursFieldSpecified;
            }
            set {
                this.minOccursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxOccurs {
            get {
                return this.maxOccursField;
            }
            set {
                this.maxOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOccursSpecified {
            get {
                return this.maxOccursFieldSpecified;
            }
            set {
                this.maxOccursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class QueryRequestType {
        
        private XpQueryType[] xpQueryField;
        
        private ChangeQueryType[] changeQueryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("XpQuery")]
        public XpQueryType[] XpQuery {
            get {
                return this.xpQueryField;
            }
            set {
                this.xpQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChangeQuery")]
        public ChangeQueryType[] ChangeQuery {
            get {
                return this.changeQueryField;
            }
            set {
                this.changeQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class UpdateBlockStatusType {
        
        private InsertResponseType[] insertResponseField;
        
        private DeleteResponseType[] deleteResponseField;
        
        private ReplaceResponseType[] replaceResponseField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InsertResponse")]
        public InsertResponseType[] InsertResponse {
            get {
                return this.insertResponseField;
            }
            set {
                this.insertResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DeleteResponse")]
        public DeleteResponseType[] DeleteResponse {
            get {
                return this.deleteResponseField;
            }
            set {
                this.deleteResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReplaceResponse")]
        public ReplaceResponseType[] ReplaceResponse {
            get {
                return this.replaceResponseField;
            }
            set {
                this.replaceResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class InsertResponseType {
        
        private NewBlueIdType[] newBlueIdField;
        
        private string newChangeNumberField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NewBlueId")]
        public NewBlueIdType[] NewBlueId {
            get {
                return this.newBlueIdField;
            }
            set {
                this.newBlueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string NewChangeNumber {
            get {
                return this.newChangeNumberField;
            }
            set {
                this.newChangeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class NewBlueIdType {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class DeleteResponseType {
        
        private string newChangeNumberField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string NewChangeNumber {
            get {
                return this.newChangeNumberField;
            }
            set {
                this.newChangeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ReplaceResponseType {
        
        private NewBlueIdType[] newBlueIdField;
        
        private string newChangeNumberField;
        
        private int selectedNodeCountField;
        
        private bool selectedNodeCountFieldSpecified;
        
        private string messageField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NewBlueId")]
        public NewBlueIdType[] NewBlueId {
            get {
                return this.newBlueIdField;
            }
            set {
                this.newBlueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string NewChangeNumber {
            get {
                return this.newChangeNumberField;
            }
            set {
                this.newChangeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SelectedNodeCount {
            get {
                return this.selectedNodeCountField;
            }
            set {
                this.selectedNodeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedNodeCountSpecified {
            get {
                return this.selectedNodeCountFieldSpecified;
            }
            set {
                this.selectedNodeCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class UpdateResponseType {
        
        private UpdateBlockStatusType[] updateBlockStatusField;
        
        private string newChangeNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UpdateBlockStatus")]
        public UpdateBlockStatusType[] UpdateBlockStatus {
            get {
                return this.updateBlockStatusField;
            }
            set {
                this.updateBlockStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string NewChangeNumber {
            get {
                return this.newChangeNumberField;
            }
            set {
                this.newChangeNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class UpdateBlockType {
        
        private InsertRequestType[] insertRequestField;
        
        private DeleteRequestType[] deleteRequestField;
        
        private ReplaceRequestType[] replaceRequestField;
        
        private string selectField;
        
        private UpdateBlockTypeOnError onErrorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InsertRequest")]
        public InsertRequestType[] InsertRequest {
            get {
                return this.insertRequestField;
            }
            set {
                this.insertRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DeleteRequest")]
        public DeleteRequestType[] DeleteRequest {
            get {
                return this.deleteRequestField;
            }
            set {
                this.deleteRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReplaceRequest")]
        public ReplaceRequestType[] ReplaceRequest {
            get {
                return this.replaceRequestField;
            }
            set {
                this.replaceRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public UpdateBlockTypeOnError OnError {
            get {
                return this.onErrorField;
            }
            set {
                this.onErrorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class InsertRequestType {
        
        private InsertRequestOptionsType optionsField;
        
        private RedAttributeType[] attributesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private object[] itemsField;
        
        private string selectField;
        
        private bool useClientIdsField;
        
        private bool useClientIdsFieldSpecified;
        
        private int minOccursField;
        
        private bool minOccursFieldSpecified;
        
        private int maxOccursField;
        
        private bool maxOccursFieldSpecified;
        
        /// <remarks/>
        public InsertRequestOptionsType Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attributes")]
        public RedAttributeType[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool UseClientIds {
            get {
                return this.useClientIdsField;
            }
            set {
                this.useClientIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseClientIdsSpecified {
            get {
                return this.useClientIdsFieldSpecified;
            }
            set {
                this.useClientIdsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinOccurs {
            get {
                return this.minOccursField;
            }
            set {
                this.minOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinOccursSpecified {
            get {
                return this.minOccursFieldSpecified;
            }
            set {
                this.minOccursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxOccurs {
            get {
                return this.maxOccursField;
            }
            set {
                this.maxOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOccursSpecified {
            get {
                return this.maxOccursFieldSpecified;
            }
            set {
                this.maxOccursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class InsertRequestOptionsType {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class RedAttributeType {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class DeleteRequestType {
        
        private DeleteRequestOptionsType optionsField;
        
        private string selectField;
        
        private int minOccursField;
        
        private bool minOccursFieldSpecified;
        
        private int maxOccursField;
        
        private bool maxOccursFieldSpecified;
        
        /// <remarks/>
        public DeleteRequestOptionsType Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinOccurs {
            get {
                return this.minOccursField;
            }
            set {
                this.minOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinOccursSpecified {
            get {
                return this.minOccursFieldSpecified;
            }
            set {
                this.minOccursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxOccurs {
            get {
                return this.maxOccursField;
            }
            set {
                this.maxOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOccursSpecified {
            get {
                return this.maxOccursFieldSpecified;
            }
            set {
                this.maxOccursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class DeleteRequestOptionsType {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ReplaceRequestType {
        
        private ReplaceRequestOptionsType optionsField;
        
        private RedAttributeType[] attributesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private object[] itemsField;
        
        private string selectField;
        
        private bool useClientIdsField;
        
        private bool useClientIdsFieldSpecified;
        
        private int minOccursField;
        
        private bool minOccursFieldSpecified;
        
        private int maxOccursField;
        
        private bool maxOccursFieldSpecified;
        
        /// <remarks/>
        public ReplaceRequestOptionsType Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attributes")]
        public RedAttributeType[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool UseClientIds {
            get {
                return this.useClientIdsField;
            }
            set {
                this.useClientIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseClientIdsSpecified {
            get {
                return this.useClientIdsFieldSpecified;
            }
            set {
                this.useClientIdsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MinOccurs {
            get {
                return this.minOccursField;
            }
            set {
                this.minOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinOccursSpecified {
            get {
                return this.minOccursFieldSpecified;
            }
            set {
                this.minOccursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxOccurs {
            get {
                return this.maxOccursField;
            }
            set {
                this.maxOccursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxOccursSpecified {
            get {
                return this.maxOccursFieldSpecified;
            }
            set {
                this.maxOccursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class ReplaceRequestOptionsType {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum UpdateBlockTypeOnError {
        
        /// <remarks/>
        RollbackBlockAndFail,
        
        /// <remarks/>
        RollbackBlockAndContinue,
        
        /// <remarks/>
        Ignore,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
    public partial class NotifyResponseType {
        
        private ResponseStatusType statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ResponseStatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
    public enum ResponseStatusType {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Rollback,
        
        /// <remarks/>
        NotAttempted,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
    public partial class MetaType {
        
        private string actionUrlField;
        
        private string baseUrlField;
        
        private string iconUrlField;
        
        private string subjectField;
        
        private string subscriptionUrlField;
        
        /// <remarks/>
        public string ActionUrl {
            get {
                return this.actionUrlField;
            }
            set {
                this.actionUrlField = value;
            }
        }
        
        /// <remarks/>
        public string BaseUrl {
            get {
                return this.baseUrlField;
            }
            set {
                this.baseUrlField = value;
            }
        }
        
        /// <remarks/>
        public string IconUrl {
            get {
                return this.iconUrlField;
            }
            set {
                this.iconUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriptionUrl {
            get {
                return this.subscriptionUrlField;
            }
            set {
                this.subscriptionUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
    public partial class ViewType {
        
        private string contentTypeField;
        
        private string deviceHintField;
        
        private string subjectField;
        
        private string valueField;
        
        /// <remarks/>
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceHint {
            get {
                return this.deviceHintField;
            }
            set {
                this.deviceHintField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts/Notify.xsd")]
    public partial class NotifyType {
        
        private ViewType contentField;
        
        private string languageField;
        
        private MetaType metaField;
        
        /// <remarks/>
        public ViewType Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public MetaType Meta {
            get {
                return this.metaField;
            }
            set {
                this.metaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class RequestType {
        
        private RequestTypeKey[] keyField;
        
        private string serviceField;
        
        private RequestTypeDocument documentField;
        
        private RequestTypeMethod methodField;
        
        private RequestTypeGenResponse genResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Key")]
        public RequestTypeKey[] Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public RequestTypeDocument Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public RequestTypeMethod Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public RequestTypeGenResponse GenResponse {
            get {
                return this.genResponseField;
            }
            set {
                this.genResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class RequestTypeKey {
        
        private string puidField;
        
        private string instanceField;
        
        private string clusterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Puid {
            get {
                return this.puidField;
            }
            set {
                this.puidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Cluster {
            get {
                return this.clusterField;
            }
            set {
                this.clusterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum RequestTypeDocument {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        RoleList,
        
        /// <remarks/>
        NotifyList,
        
        /// <remarks/>
        Policy,
        
        /// <remarks/>
        System,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum RequestTypeMethod {
        
        /// <remarks/>
        Insert,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Update,
        
        /// <remarks/>
        Query,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum RequestTypeGenResponse {
        
        /// <remarks/>
        Always,
        
        /// <remarks/>
        Never,
        
        /// <remarks/>
        FaultOnly,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class SubscriptionType {
        
        private SubscriptionTypeTrigger triggerField;
        
        private System.DateTime expiresAtField;
        
        private bool expiresAtFieldSpecified;
        
        private SubscriptionTypeContext contextField;
        
        private string toField;
        
        private string changeNumberField;
        
        private string idField;
        
        private byte[] creatorField;
        
        /// <remarks/>
        public SubscriptionTypeTrigger Trigger {
            get {
                return this.triggerField;
            }
            set {
                this.triggerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpiresAt {
            get {
                return this.expiresAtField;
            }
            set {
                this.expiresAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiresAtSpecified {
            get {
                return this.expiresAtFieldSpecified;
            }
            set {
                this.expiresAtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public SubscriptionTypeContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="nonNegativeInteger")]
        public string ChangeNumber {
            get {
                return this.changeNumberField;
            }
            set {
                this.changeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="hexBinary")]
        public byte[] Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class SubscriptionTypeTrigger {
        
        private string selectField;
        
        private SubscriptionTypeTriggerMode modeField;
        
        private string baseChangeNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Select {
            get {
                return this.selectField;
            }
            set {
                this.selectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public SubscriptionTypeTriggerMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="nonNegativeInteger")]
        public string BaseChangeNumber {
            get {
                return this.baseChangeNumberField;
            }
            set {
                this.baseChangeNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public enum SubscriptionTypeTriggerMode {
        
        /// <remarks/>
        IncludeData,
        
        /// <remarks/>
        ExcludeData,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.iquomi.com/2004/01/core")]
    public partial class SubscriptionTypeContext {
        
        private System.Xml.XmlElement[] anyField;
        
        private string uriField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public partial class ConnectionType {
        
        private ConnectionClassType classField;
        
        private ConnectionStatusType statusField;
        
        private ConnectionCharacteristicsType characteristicsField;
        
        private System.DateTime expirationField;
        
        private NotificationQueryType argotQueryField;
        
        private ArgotType[] argotField;
        
        private string changeNumberField;
        
        private string idField;
        
        private byte[] creatorField;
        
        /// <remarks/>
        public ConnectionClassType Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionCharacteristicsType Characteristics {
            get {
                return this.characteristicsField;
            }
            set {
                this.characteristicsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        public NotificationQueryType ArgotQuery {
            get {
                return this.argotQueryField;
            }
            set {
                this.argotQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Argot")]
        public ArgotType[] Argot {
            get {
                return this.argotField;
            }
            set {
                this.argotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core", DataType="nonNegativeInteger")]
        public string ChangeNumber {
            get {
                return this.changeNumberField;
            }
            set {
                this.changeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core")]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core", DataType="hexBinary")]
        public byte[] Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum ConnectionClassType {
        
        /// <remarks/>
        Push_http,
        
        /// <remarks/>
        Pull_http,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum ConnectionStatusType {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Busy,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum ConnectionCharacteristicsType {
        
        /// <remarks/>
        Reliable,
        
        /// <remarks/>
        Unreliable,
        
        /// <remarks/>
        ConnectionPoll,
        
        /// <remarks/>
        UserAgentPoll,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum NotificationQueryType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("*")]
        Item,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public partial class ArgotType {
        
        private System.Xml.XmlElement[] anyField;
        
        private string argotURIField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string ArgotURI {
            get {
                return this.argotURIField;
            }
            set {
                this.argotURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public partial class StreamType {
        
        private StreamClassType classField;
        
        private System.DateTime expirationField;
        
        private bool expirationFieldSpecified;
        
        private StreamPositionType positionField;
        
        private NotificationQueryType argotQueryField;
        
        private bool argotQueryFieldSpecified;
        
        private ArgotType[] argotField;
        
        private string changeNumberField;
        
        private string idField;
        
        private byte[] creatorField;
        
        /// <remarks/>
        public StreamClassType Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationSpecified {
            get {
                return this.expirationFieldSpecified;
            }
            set {
                this.expirationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public StreamPositionType Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public NotificationQueryType ArgotQuery {
            get {
                return this.argotQueryField;
            }
            set {
                this.argotQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArgotQuerySpecified {
            get {
                return this.argotQueryFieldSpecified;
            }
            set {
                this.argotQueryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Argot")]
        public ArgotType[] Argot {
            get {
                return this.argotField;
            }
            set {
                this.argotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core", DataType="nonNegativeInteger")]
        public string ChangeNumber {
            get {
                return this.changeNumberField;
            }
            set {
                this.changeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core")]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://schemas.iquomi.com/2004/01/core", DataType="hexBinary")]
        public byte[] Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum StreamClassType {
        
        /// <remarks/>
        Buffer,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public enum StreamPositionType {
        
        /// <remarks/>
        AtFront,
        
        /// <remarks/>
        AtEnd,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.iquomi.com/2004/01/iqAlerts")]
    public partial class IqAlertsType {
        
        private StreamType[] streamField;
        
        private ConnectionType[] connectionField;
        
        private SubscriptionType[] subscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Stream")]
        public StreamType[] Stream {
            get {
                return this.streamField;
            }
            set {
                this.streamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Connection")]
        public ConnectionType[] Connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Subscription")]
        public SubscriptionType[] Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.iquomi.com/2004/01/core")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.iquomi.com/2004/01/core", IsNullable=false)]
    public partial class SoapRequestType : System.Web.Services.Protocols.SoapHeader {
        
        private RequestType valueField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public RequestType Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    public delegate void VoidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    public delegate void NotifyCompletedEventHandler(object sender, NotifyCompletedEventArgs e);
    
    /// <remarks/>
    public partial class NotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotifyResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotifyResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void DebugListUsersCompletedEventHandler(object sender, DebugListUsersCompletedEventArgs e);
    
    /// <remarks/>
    public partial class DebugListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void ReplaceCompletedEventHandler(object sender, ReplaceCompletedEventArgs e);
    
    /// <remarks/>
    public partial class ReplaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReplaceResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplaceResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    public delegate void ListenResponseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
