//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3328.4
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3328.4.
// 
namespace hsProxy.myServicesNs {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="myServicesBinding", Namespace="http://schemas.microsoft.com/hs/2001/10/myServices/wsdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
    public class myServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public pathType path;
        
        public licenses licensesValue;
        
        public requestType request;
        
        public echoBackType echoBack;
        
        public responseType response;
        
        /// <remarks/>
        public myServices() {
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("insertResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public insertResponse insert([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] insertRequestType insertRequest) {
            object[] results = this.Invoke("insert", new object[] {
                        insertRequest});
            return ((insertResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begininsert(insertRequestType insertRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insert", new object[] {
                        insertRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public insertResponse Endinsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((insertResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public deleteResponse delete([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] deleteRequestType deleteRequest) {
            object[] results = this.Invoke("delete", new object[] {
                        deleteRequest});
            return ((deleteResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(deleteRequestType deleteRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        deleteRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public deleteResponse Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((deleteResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("replaceResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public replaceResponse replace([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] replaceRequestType replaceRequest) {
            object[] results = this.Invoke("replace", new object[] {
                        replaceRequest});
            return ((replaceResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginreplace(replaceRequestType replaceRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("replace", new object[] {
                        replaceRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public replaceResponse Endreplace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((replaceResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public updateResponseType update([System.Xml.Serialization.XmlArrayAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] [System.Xml.Serialization.XmlArrayItemAttribute("updateBlock", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)] updateBlockType[] updateRequest) {
            object[] results = this.Invoke("update", new object[] {
                        updateRequest});
            return ((updateResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupdate(updateBlockType[] updateRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("update", new object[] {
                        updateRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public updateResponseType Endupdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((updateResponseType)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("queryResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public queryResponseType query([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] queryRequestType queryRequest) {
            object[] results = this.Invoke("query", new object[] {
                        queryRequest});
            return ((queryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginquery(queryRequestType queryRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("query", new object[] {
                        queryRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public queryResponseType Endquery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((queryResponseType)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", RequestNamespace="http://schemas.microsoft.com/hs/2001/10/core", ResponseNamespace="http://schemas.microsoft.com/hs/2001/10/core", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void sendXml([System.Xml.Serialization.XmlAnyElementAttribute()] ref System.Xml.XmlElement any) {
            object[] results = this.Invoke("sendXml", new object[] {
                        any});
            any = ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendXml(System.Xml.XmlElement any, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendXml", new object[] {
                        any}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsendXml(System.IAsyncResult asyncResult, out System.Xml.XmlElement any) {
            object[] results = this.EndInvoke(asyncResult);
            any = ((System.Xml.XmlElement)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("echoBack", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class echoBackType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deletedBlueType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseTypeChangeQueryResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changedBlue")]
        public System.Xml.XmlElement[] changedBlue;
        
        /// <remarks/>
        public deletedBlueType deletedBlue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string baseChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum responseStatus {
        
        /// <remarks/>
        success,
        
        /// <remarks/>
        failure,
        
        /// <remarks/>
        rollback,
        
        /// <remarks/>
        notAttempted,
        
        /// <remarks/>
        accessDenied,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="myServices", Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
    public class myServices1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("service")]
        public serviceType[] service;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string instanceId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
    public class serviceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cat")]
        public catType[] cat;
        
        /// <remarks/>
        public serviceTypeKey key;
        
        /// <remarks/>
        public string refer;
        
        /// <remarks/>
        public string to;
        
        /// <remarks/>
        public string spn;
        
        /// <remarks/>
        public string realm;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class catType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string @ref;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
    public class serviceTypeKey {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string puid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string instance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cluster;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseTypeXpQueryResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("myServices", typeof(myServices1), Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(serviceType), Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xpQueryResponse")]
        public queryResponseTypeXpQueryResponse[] xpQueryResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changeQueryResponse")]
        public queryResponseTypeChangeQueryResponse[] changeQueryResponse;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class changeQueryType {
        
        /// <remarks/>
        public queryOptionsType options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string baseChangeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryOptionsType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sort")]
        public sortType[] sort;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("range")]
        public rangeType[] range;
        
        /// <remarks/>
        public shapeType shape;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class sortType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(sortTypeDirection.ascending)]
        public sortTypeDirection direction = sortTypeDirection.ascending;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string key;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum sortTypeDirection {
        
        /// <remarks/>
        ascending,
        
        /// <remarks/>
        descending,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class rangeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string first;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int count;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class shapeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public shapeAtomType[] include;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exclude")]
        public shapeAtomType[] exclude;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public shapeTypeBase @base;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class shapeAtomType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum shapeTypeBase {
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        nil,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class xpQueryType {
        
        /// <remarks/>
        public queryOptionsType options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xpQuery")]
        public xpQueryType[] xpQuery;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changeQuery")]
        public changeQueryType[] changeQuery;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateResponseTypeUpdateBlockStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("insertResponse")]
        public insertResponse[] insertResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteResponse")]
        public deleteResponse[] deleteResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceResponse")]
        public replaceResponse[] replaceResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class insertResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newBlueId")]
        public newBlueIdType[] newBlueId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class newBlueIdType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deleteResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class replaceResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newBlueId")]
        public newBlueIdType[] newBlueId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateResponseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("updateBlockStatus")]
        public updateResponseTypeUpdateBlockStatus[] updateBlockStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateBlockType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("insertRequest")]
        public insertRequestType[] insertRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteRequest")]
        public deleteRequestType[] deleteRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceRequest")]
        public replaceRequestType[] replaceRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public updateBlockTypeOnError onError;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class insertRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("service", Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
        public serviceType[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public redAttributeType[] attributes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public useClientIdsType useClientIds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useClientIdsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class redAttributeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum useClientIdsType {
        
        /// <remarks/>
        @true,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deleteRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class replaceRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("service", Namespace="http://schemas.microsoft.com/hs/2001/10/myServices")]
        public serviceType[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public redAttributeType[] attributes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public useClientIdsType useClientIds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useClientIdsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum updateBlockTypeOnError {
        
        /// <remarks/>
        rollbackBlockAndFail,
        
        /// <remarks/>
        rollbackBlockAndContinue,
        
        /// <remarks/>
        ignore,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class requestTypeKey {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string puid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string instance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cluster;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class identityType {
        
        /// <remarks/>
        public int kerberos;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    public class pathTypeFault {
        
        /// <remarks/>
        public int faultcode;
        
        /// <remarks/>
        public string faultreason;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string endpoint;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("at", DataType="anyURI", IsNullable=false)]
        public string[] found;
        
        /// <remarks/>
        public int maxsize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxsizeSpecified;
        
        /// <remarks/>
        public int maxtime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxtimeSpecified;
        
        /// <remarks/>
        public int retryAfter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryAfterSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    public class viaChainTypeVia {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string vid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("response", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class responseType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string role;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/soap/security/2000-12")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.xmlsoap.org/soap/security/2000-12", IsNullable=false)]
    public class licenses : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public identityType identity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("request", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class requestType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public requestTypeKey[] key;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string service;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public requestTypeDocument document;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string method;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public requestTypeGenResponse genResponse;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum requestTypeDocument {
        
        /// <remarks/>
        content,
        
        /// <remarks/>
        roleList,
        
        /// <remarks/>
        policy,
        
        /// <remarks/>
        system,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum requestTypeGenResponse {
        
        /// <remarks/>
        always,
        
        /// <remarks/>
        never,
        
        /// <remarks/>
        faultOnly,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    [System.Xml.Serialization.XmlRootAttribute("path", Namespace="http://schemas.xmlsoap.org/rp/", IsNullable=false)]
    public class pathType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string action;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string to;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("via", IsNullable=false)]
        public viaChainTypeVia[] fwd;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("via", IsNullable=false)]
        public viaChainTypeVia[] rev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string from;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string relatesTo;
        
        /// <remarks/>
        public pathTypeFault fault;
    }
}
