<?xml version="1.0" encoding="utf-8" ?>
<xsd:schema
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:xdb="urn:schemas-iquomi-com:xdb"
	xmlns:iq="http://schemas.iquomi.com/2004/01/core" 
	xmlns:mc="http://schemas.iquomi.com/2004/01/iqCalendar"
	targetNamespace="http://schemas.iquomi.com/2004/01/iqProfile"
	xmlns="http://schemas.iquomi.com/2004/01/iqProfile"
	elementFormDefault="qualified" 
	version="1.0">
	
    <xsd:annotation>
        <xsd:documentation>
            Schema for Iquomi&#174; Profile service.
            Copyright (c) 2004 Iquomi. All rights reserved.
        </xsd:documentation>
		
        <xsd:appinfo>
            <xdb:index id="1" select="/IqProfile/Address">
                <xdb:indexComponent select="$docId" />
                <xdb:indexComponent select="./@Id" />
            </xdb:index>
			
            <xdb:blue select="/IqProfile" />
            <xdb:blue select="/IqProfile/*" />
			
            <xdb:red select="//@Id" />
            <xdb:red select="//@Creator" />
            <xdb:red select="//@ChangeNumber" />
            <xdb:red select="//Cat" />
            <xdb:red select="//Cat/@Ref" />
            <xdb:red select="/IqProfile/Address/$any" />
            <xdb:red select="/IqProfile/WebSite/$any" />
            <xdb:red select="/IqProfile/EmailAddress/$any" />
            <xdb:red select="/IqProfile/ScreenName/$any" />
            <xdb:red select="/IqProfile/TelephoneNumber/$any" />
            <xdb:red select="/IqProfile/Name/$any" />
            <xdb:red select="/IqProfile/SpecialDate/$any" />
            <xdb:red select="/IqProfile/UserReference/$any" />
            <xdb:red select="/IqProfile/Picture/$any" />
            <xdb:red select="/IqProfile/IdentificationNumber/$any" />
            <xdb:red select="/IqProfile/WorkInformation/$any" />
            <xdb:red select="/IqProfile/Subscription/context/$any" />

            <xdb:sqlScript source="iqProfileCustomSQL.sql" />

            <xdb:namespaceMap>
                <xdb:mapping uri="http://schemas.iquomi.com/2004/01/iqProfile" alias="m" />
                <xdb:mapping uri="http://schemas.iquomi.com/2004/01/iqCalendar" alias="mc" />
                <xdb:mapping uri="http://schemas.iquomi.com/2004/01/core" alias="iq" />
            </xdb:namespaceMap>
        </xsd:appinfo>
    </xsd:annotation>
	
    <xsd:import namespace="http://schemas.iquomi.com/2004/01/core" schemaLocation="http://schemas.iquomi.com/2004/01/core/iqcommon.xsd" />
    <xsd:import namespace="http://schemas.iquomi.com/2004/01/iqCalendar" schemaLocation="http://schemas.iquomi.com/2004/01/iqCalendar/iqCalendar.xsd" />
	
    <!--
    //
    // IqProfile
    //  - root element for the IqProfile service
    //
    -->
    <xsd:element
        name="IqProfile"
        type="IqProfileType"
        >
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates the content document for this service. This element
            establishes a global cache scope for the service and contains other
            root-level system attributes for this instance of the service.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:complexType
        name="IqProfileType"
        >
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates and defines the basic IqProfile types for the
            IqProfile service.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
                />

        <xsd:element
                name="Name"
                type="NameType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

        <xsd:element
                name="MemberInformation"
                type="MemberInformationType"
                minOccurs="0"
                maxOccurs="unbounded"
            />

        <xsd:element
                name="LanguagePreference"
                type="LanguagePreferenceType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element specifies the preferred language code
                    of the identity encoded using ISO 639 language codes
                    or ISO 3166 country codes, as defined by <a href="http://www.ietf.org/rfc/rfc1766.txt">RFC 1766</a>.
                    The purpose of this value in this service is to indicate the languages understood
                    by this identity. When manipulating localizable content, choose from an appropriate language
                    preference. When encountering localized content not falling within this set, the software should translate
                    into a language understood by this set.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        <xsd:element
                name="TimeZonePreference"
                type="TimeZonePreferenceType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element supplies the base time zone preference for this entity.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        <xsd:element
                name="SpecialDate"
                type="SpecialDateBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
            />

        <xsd:element
                name="UserReference"
                type="CategorizedUserReferenceBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
            />

        <xsd:element
                name="Picture"
                type="PictureBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
            />

        <xsd:element
                name="Gender"
                type="GenderBlueType"
                minOccurs="0"
                maxOccurs="1"
            />

        <xsd:element
                name="IdentificationNumber"
                type="IdentificationNumberBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
            />

            <xsd:element
                name="WorkInformation"
                type="WorkInformationBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="Address"
                type="AddressBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="WebSite"
                type="WebSiteBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="EmailAddress"
                type="EmailAddressBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="ScreenName"
                type="ScreenNameBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="TelephoneNumber"
                type="TelephoneNumberBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="Subscription"
                type="iq:SubscriptionType"
                minOccurs="0"
                maxOccurs="unbounded"
                />

            <xsd:element
                name="SecurityCertificate"
                type="SecurityCertificateBlueType"
                minOccurs="0"
                maxOccurs="unbounded"
                />

        </xsd:sequence>

        <!-- standard attributes for the root element -->
        <xsd:attributeGroup ref="iq:DocumentRootAttributeGroup" />

    </xsd:complexType>


    <!--
    //
    // myNameType
    //
    -->
    <xsd:complexType name="MyNameType">
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates a name associated with the identity. An identity
            can have multiple names associated with it. These name nodes are not
            intended to be used to store screen or other electronic names, but
            rather to store a name commonly used for the entity.
            Names contain five parts and should be combined in proper
            order, with spaces
            separating the parts and empty content parts excluded.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:element
                name="Title"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element is used to store a title or prefix associated with the name (for example,'Mr.', 'Mrs.', 'Dr.', or any other commonly used name title or prefix).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="GivenName"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element is used to store the first portion of a name.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="MiddleName"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element is used to store the middle portion or initial of a name.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="SurName"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element is used to store the last portion of a name.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="Suffix"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element is used to store a suffix associated with the name (for example, 'Jr.', 'Sr.', 'III', or any other commonly used name suffix).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="FileAsName"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    A complete name is usually the combination of <b>title</b>, <b>givenName</b>, <b>middleName</b>, <b>surName</b>, and
                    <b>suffix</b>. The presence of this optional element indicates that a different order should be used
                    or that the identity prefers to have the name filed differently.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />

        </xsd:sequence>
    </xsd:complexType>

    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="Name" type="NameType" />

    <!-- NameType: myName type plus blue node attributes -->
    <xsd:complexType name="NameType">
        <xsd:complexContent>
            <xsd:extension base="MyNameType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LanguagePreferenceType">
        <xsd:simpleContent>
            <xsd:extension base="iq:String" >
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
                <xsd:attribute
                    name="Level"
                    use="required"
                    >
                    <xsd:annotation>
                        <xsd:documentation>
                            This attribute indicates how well this language is understood by this identity. Valid
                            values include:
                            <ul>
                                <li>native</li>
                                <li>fluent</li>
                                <li>intermediate</li>
                                <li>beginner</li>
                            </ul>
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:restriction base="iq:String">
                            <xsd:enumeration value="native" />
                            <xsd:enumeration value="fluent" />
                            <xsd:enumeration value="intermediate" />
                            <xsd:enumeration value="beginner" />
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TimeZonePreferenceType">
        <xsd:sequence>
            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="unbounded"
                />
            <xsd:element
                name="TimeZone"
                type="iq:String"
                minOccurs="1"
                maxOccurs="1"
                />
        </xsd:sequence>
        <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
    </xsd:complexType>

    <!-- gender stuff -->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="Gender" type="GenderType" />
    <xsd:simpleType name="GenderType">
        <xsd:annotation>
            <xsd:documentation>
            This element specifies the gender for this entity.
            An entity can be associated with only one gender.
            The format of this element is a single, 7-bit ASCII character with
            one of two possible values: 'm' for male and 'f' for female.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="iq:String">
            <xsd:maxLength value="1" />
            <xsd:enumeration value="f" />
            <xsd:enumeration value="m" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="GenderBlueType">
        <xsd:simpleContent>
            <xsd:extension base="GenderType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <!-- memberInformation stuff -->

    <xsd:complexType name="MemberInformationType">
        <xsd:annotation>
            <xsd:documentation>
            This node wraps member-specific public information for this entity. The information
            cannot be changed. This is reflected in the schemas that modify the content document.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element
                name="MemberNamePortion"
                type="iq:LocalizableString"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    A member name is a combination of a user name portion and a domain name portion.
                    These names separated by an '@' character form a fully qualified
                    member name. This element contains the user name portion of the name. For
                    a fully qualified member name of someone@microsoft.com, this element contains the value
                    'someone'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="DomainNamePortion"
                type="iq:String"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This is the other part of the fully qualified member name.
                    This element contains the domain name portion. For
                    a fully qualified member name of someone@microsoft.com, this element contains the value
                    'microsoft.com'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        </xsd:sequence>
        <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
    </xsd:complexType>

    <!-- specialDate stuff -->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="SpecialDate" type="SpecialDateBlueType" />
    <xsd:complexType name="SpecialDateType">
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates a date that is important to this entity.
            Multiple special date nodes can exist. This is not a substitute for dates stored
            on an entity's <a href="#iqCalendar">.NET Calendar</a> service. Its purpose
            is to provide a convenient place to store a birthdate or anniversary because
            these dates are frequently imported into a contact record.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="1"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            <xsd:element name="Date"
                type="xsd:date"
                minOccurs="1"
                maxOccurs="1"
                />
        </xsd:sequence>
        <xsd:attribute
            name="CalendarType"
            type="mc:CalendarLocaleEnum"
            use="required"
        />
    </xsd:complexType>

    <xsd:complexType name="SpecialDateBlueType">
        <xsd:complexContent>
            <xsd:extension base="SpecialDateType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- userReference stuff -->
        <!-- needed for wsdl generation (because myContacts references it) -->
    <xsd:element name="UserReference" type="CategorizedUserReferenceBlueType" />
    <xsd:complexType name="CategorizedUserReferenceBlueType">
        <xsd:complexContent>
            <xsd:extension base="iq:UserReferenceCategorized">
                <xsd:sequence>
                    <!--
                    // paulste: since these are blue nodes they should have {any}
                    //  elements as well
                    //-->
                    <xsd:any
                    processContents="skip"
                    namespace="##other"
                    minOccurs="0"
                    maxOccurs="unbounded"
                    />
                </xsd:sequence>
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- picture stuff -->
    <xsd:complexType name="PictureType">
        <xsd:annotation>
            <xsd:documentation>
            This optional element encapsulates a URL that points to a picture of the identity.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="1"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            <xsd:element
                name="Url"
                type="iq:String"
                minOccurs="1"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the URL that points to the actual picture.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        </xsd:sequence>
    </xsd:complexType>

    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="Picture" type="PictureBlueType" />
    <xsd:complexType name="PictureBlueType">
        <xsd:complexContent>
            <xsd:extension base="PictureType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- identificationNumber stuff -->
    <xsd:complexType name="IdentificationNumberType">
        <xsd:annotation>
            <xsd:documentation>
            This optional element encapsulates an identification number
            for the entity (for example, an employee ID number, social security number,
            national ID number, or driver's license number).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="1"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            
            <xsd:element
                name="Number"
                type="iq:String"
                minOccurs="1"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the actual identification number value.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        </xsd:sequence>
    </xsd:complexType>

    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="IdentificationNumber" type="IdentificationNumberBlueType" />
    <xsd:complexType name="IdentificationNumberBlueType">
        <xsd:complexContent>
            <xsd:extension base="IdentificationNumberType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="WorkInformation" type="WorkInformationType" />
    <xsd:complexType
        name="WorkInformationType"
        >
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates information related to work or occupation for this
            entity.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="unbounded"
                />

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
                />

            <xsd:element
                name="Profession"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This optional element specifies the entity's profession within this
                    particular <b>workInformation</b> element.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="JobTitle"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element specifies the job title for this piece of work information.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="OfficeLocation"
                type="iq:LocalizableString"
                minOccurs="0"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element specifies the office location for this piece of work information.
                    <p/>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element
                name="CoworkerOrDepartment"
                minOccurs="0"
                maxOccurs="unbounded"
                type="iq:UserReferenceCategorized"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element encapsulates information about this entity's manager, assistant,
                    company, department, and so on. The information can include its name, 
                    Iquomi Unique ID (IQID) and e-mail address. Using this anchor information, 
                    additional details can be obtained.
                    The required <b>Cat</b> element indicates the relationship of the element to 
                    this entity (that is, ref="system#manager").
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="WorkInformationBlueType">
        <xsd:complexContent>
            <xsd:extension base="WorkInformationType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!--
    //
    // address
    //  - public type for address
    //
    -->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="Address" type="AddressBlueType" />
    <xsd:complexType name="AddressBlueType">
        <xsd:complexContent>
            <xsd:extension base="iq:AddressType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!--
    //
    // webSiteType
    //
    //-->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="WebSite" type="WebSiteType" />

    <xsd:complexType name="WebSiteType">
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates an electronic address for this entity. Specifically,
            it contains a Website or URL associated with this identity.
            This element
            can be repeated. Typically, one <b>webSite</b>
            element is used for each Web site associated with this identity.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="1"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            <xsd:element
                name="Url"
                type="iq:String"
                minOccurs="1"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the URL for this Web site. If the site is accessible
                    through multiple URLs, this element can be repeated the corresponding
                    number of times.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>

    </xsd:complexType>

    <xsd:complexType name="WebSiteBlueType">
        <xsd:complexContent>
            <xsd:extension base="WebSiteType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!--
    //
    // emailAddressType
    //
    //-->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="MinimalEmailAddress" type="MinimalEmailAddressType" />
    <xsd:element name="EmailAddress" type="EmailAddressType" />

    <xsd:complexType name="MinimalEmailAddressType">
        <xsd:sequence>
            <xsd:element
                name="Email"
                type="iq:String"
                minOccurs="1"
                maxOccurs="1"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the actual value of the e-mail address (for example, someone@microsoft.com).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="EmailAddressType">
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates an electronic address for this entity. Specifically,
            it contains an e-mail address associated with this identity.
            This element
            can be repeated. Typically, one <b>emailAddress</b> element is used
            for each e-mail address associated with this identity.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="unbounded"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            <xsd:element
                name="Email"
                type="iq:String"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the actual value of the e-mail address (for example, someone@microsoft.com).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element
                name="Name"
                type="iq:LocalizableString"
                minOccurs="0"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the friendly or display name associated
                    with this e-mail address.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="EmailAddressBlueType">
        <xsd:complexContent>
            <xsd:extension base="EmailAddressType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!--
    //
    // screenNameType
    //  - open issue: how do we indicate where this screen name is commonly used?
    //
    //-->
    <xsd:complexType name="ScreenNameType">
        <xsd:annotation>
            <xsd:documentation>
            This element encapsulates an electronic address for this entity. Specifically,
            it contains a screen name commonly used in real-time communication
            applications, such as instant messaging, chat rooms, and so on.
            This element
            can be repeated. The <b>type</b> attribute can be used
            for simple classifications on the <b>screenName</b>.
            </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>

            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="1"
                >
            </xsd:element>

            <xsd:any
                processContents="skip"
                namespace="##other"
                minOccurs="0"
                maxOccurs="unbounded"
            />
            <xsd:element
                name="Name"
                type="iq:LocalizableString"
                >
                <xsd:annotation>
                    <xsd:documentation>
                    This element contains the value of the screen name.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

        </xsd:sequence>
    </xsd:complexType>
    
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="ScreenName" type="ScreenNameBlueType" />
    
    <xsd:complexType name="ScreenNameBlueType">
        <xsd:complexContent>
            <xsd:extension base="ScreenNameType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

<!--
    // telephoneNumber Type
-->
    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="TelephoneNumber" type="TelephoneNumberBlueType" />

    <xsd:complexType name="TelephoneNumberBlueType">
        <xsd:complexContent>
            <xsd:extension base="iq:TelephoneNumberType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

<!--
    // securityCertificateType
    //  open issue: what type should <certificate> be?
-->
    <xsd:complexType name="SecurityCertificateType">
        <xsd:sequence>
            <xsd:element
                name="Cat"
                type="iq:CatType"
                minOccurs="0"
                maxOccurs="unbounded"
                />
            <xsd:element
                name="Certificate"
                type="xsd:hexBinary"
                minOccurs="1"
                maxOccurs="1"
                />
        </xsd:sequence>
    </xsd:complexType>

    <!-- sgfix: required for wsdl (because myContacts references it) -->
    <xsd:element name="SecurityCertificate" type="SecurityCertificateBlueType" />
    <xsd:complexType name="SecurityCertificateBlueType">
        <xsd:complexContent>
            <xsd:extension base="SecurityCertificateType">
                <xsd:attributeGroup ref="iq:StandardBlueAttributeGroup" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

<!--
    // securityCertificateType
    //  open issue: what type should <certificate> be?
-->

</xsd:schema>