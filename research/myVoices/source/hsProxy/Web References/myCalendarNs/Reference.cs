//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3328.4
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3328.4.
// 
namespace hsProxy.myCalendarNs {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="myCalendarBinding", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar/wsdl")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeResponseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(domainStandardMethodParametersType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(myCalendarType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(weekDayAttributesType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
    public class myCalendar : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public pathType path;
        
        public licenses licensesValue;
        
        public requestType request;
        
        public echoBackType echoBack;
        
        public responseType response;
        
        /// <remarks/>
        public myCalendar() {
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("insertResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public insertResponse insert([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] insertRequestType insertRequest) {
            object[] results = this.Invoke("insert", new object[] {
                        insertRequest});
            return ((insertResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begininsert(insertRequestType insertRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insert", new object[] {
                        insertRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public insertResponse Endinsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((insertResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public deleteResponse delete([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] deleteRequestType deleteRequest) {
            object[] results = this.Invoke("delete", new object[] {
                        deleteRequest});
            return ((deleteResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(deleteRequestType deleteRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        deleteRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public deleteResponse Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((deleteResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("replaceResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public replaceResponse replace([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] replaceRequestType replaceRequest) {
            object[] results = this.Invoke("replace", new object[] {
                        replaceRequest});
            return ((replaceResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginreplace(replaceRequestType replaceRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("replace", new object[] {
                        replaceRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public replaceResponse Endreplace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((replaceResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public updateResponseType update([System.Xml.Serialization.XmlArrayAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] [System.Xml.Serialization.XmlArrayItemAttribute("updateBlock", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)] updateBlockType[] updateRequest) {
            object[] results = this.Invoke("update", new object[] {
                        updateRequest});
            return ((updateResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupdate(updateBlockType[] updateRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("update", new object[] {
                        updateRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public updateResponseType Endupdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((updateResponseType)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("queryResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public queryResponseType query([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")] queryRequestType queryRequest) {
            object[] results = this.Invoke("query", new object[] {
                        queryRequest});
            return ((queryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginquery(queryRequestType queryRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("query", new object[] {
                        queryRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public queryResponseType Endquery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((queryResponseType)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", RequestNamespace="http://schemas.microsoft.com/hs/2001/10/core", ResponseNamespace="http://schemas.microsoft.com/hs/2001/10/core", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void sendXml([System.Xml.Serialization.XmlAnyElementAttribute()] ref System.Xml.XmlElement any) {
            object[] results = this.Invoke("sendXml", new object[] {
                        any});
            any = ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendXml(System.Xml.XmlElement any, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendXml", new object[] {
                        any}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsendXml(System.IAsyncResult asyncResult, out System.Xml.XmlElement any) {
            object[] results = this.EndInvoke(asyncResult);
            any = ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCalendarDaysResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        public getCalendarDaysResponse getCalendarDays([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] getCalendarDaysRequest getCalendarDaysRequest) {
            object[] results = this.Invoke("getCalendarDays", new object[] {
                        getCalendarDaysRequest});
            return ((getCalendarDaysResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCalendarDays(getCalendarDaysRequest getCalendarDaysRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCalendarDays", new object[] {
                        getCalendarDaysRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public getCalendarDaysResponse EndgetCalendarDays(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((getCalendarDaysResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getFreeBusyDaysResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        public getFreeBusyDaysResponse getFreeBusyDays([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] getFreeBusyDaysRequest getFreeBusyDaysRequest) {
            object[] results = this.Invoke("getFreeBusyDays", new object[] {
                        getFreeBusyDaysRequest});
            return ((getFreeBusyDaysResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFreeBusyDays(getFreeBusyDaysRequest getFreeBusyDaysRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFreeBusyDays", new object[] {
                        getFreeBusyDaysRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public getFreeBusyDaysResponse EndgetFreeBusyDays(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((getFreeBusyDaysResponse)(results[0]));
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void sendMeeting([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] sendMeetingRequest sendMeetingRequest) {
            this.Invoke("sendMeeting", new object[] {
                        sendMeetingRequest});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendMeeting(sendMeetingRequest sendMeetingRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendMeeting", new object[] {
                        sendMeetingRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsendMeeting(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void respond([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] respondRequest respondRequest) {
            this.Invoke("respond", new object[] {
                        respondRequest});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrespond(respondRequest respondRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("respond", new object[] {
                        respondRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endrespond(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void updateReminder([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] updateReminderRequest updateReminderRequest) {
            this.Invoke("updateReminder", new object[] {
                        updateReminderRequest});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateReminder(updateReminderRequest updateReminderRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateReminder", new object[] {
                        updateReminderRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateReminder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void deleteReminder([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] deleteReminderRequest deleteReminderRequest) {
            this.Invoke("deleteReminder", new object[] {
                        deleteReminderRequest});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteReminder(deleteReminderRequest deleteReminderRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteReminder", new object[] {
                        deleteReminderRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteReminder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [Microsoft.Hs.HsSoapExtensionAttribute(true)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("echoBack", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut, Required=false)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("response", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("licensesValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("request")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("path", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/hs/2001/10/core#request", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getQuickViewResponse", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        public getQuickViewResponse getQuickView([System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")] getQuickViewRequest getQuickViewRequest) {
            object[] results = this.Invoke("getQuickView", new object[] {
                        getQuickViewRequest});
            return ((getQuickViewResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetQuickView(getQuickViewRequest getQuickViewRequest, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getQuickView", new object[] {
                        getQuickViewRequest}, callback, asyncState);
        }
        
        /// <remarks/>
        public getQuickViewResponse EndgetQuickView(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((getQuickViewResponse)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("echoBack", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class echoBackType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getQuickViewResponseMonthDay {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int d;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public bool Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getQuickViewResponseMonth {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("day")]
        public getQuickViewResponseMonthDay[] day;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int m;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int year;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yearSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getQuickViewResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("month")]
        public getQuickViewResponseMonth[] month;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum responseStatus {
        
        /// <remarks/>
        success,
        
        /// <remarks/>
        failure,
        
        /// <remarks/>
        rollback,
        
        /// <remarks/>
        notAttempted,
        
        /// <remarks/>
        accessDenied,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class deleteReminderRequest {
        
        /// <remarks/>
        public string notificationId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class updateReminderRequest {
        
        /// <remarks/>
        public reminderType reminder;
        
        /// <remarks/>
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(reminderBlueType))]
    public class reminderType {
        
        /// <remarks/>
        public bool set;
        
        /// <remarks/>
        public localizableString to;
        
        /// <remarks/>
        public int offset;
        
        /// <remarks/>
        public int interruptability;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool interruptabilitySpecified;
        
        /// <remarks/>
        public System.DateTime lastSentTime;
        
        /// <remarks/>
        public System.DateTime nextTriggerTime;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class localizableString {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="http://www.w3.org/XML/1998/namespace")]
        public string lang;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public dirType dir;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dirSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum dirType {
        
        /// <remarks/>
        rtl,
        
        /// <remarks/>
        ltr,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class reminderBlueType : reminderType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(respondRequest))]
    public class attendeeResponseType {
        
        /// <remarks/>
        public System.DateTime responseTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTimeSpecified;
        
        /// <remarks/>
        public attendeeAcceptEnum responseType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTypeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeStartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeStartTimeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeEndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeEndTimeSpecified;
        
        /// <remarks/>
        public string counterProposeLocation;
        
        /// <remarks/>
        public longText responseBody;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum attendeeAcceptEnum {
        
        /// <remarks/>
        accept,
        
        /// <remarks/>
        decline,
        
        /// <remarks/>
        tentative,
        
        /// <remarks/>
        counterPropose,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class longText {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="http://www.w3.org/XML/1998/namespace")]
        public string lang;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public dirType dir;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dirSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class respondRequest : attendeeResponseType {
        
        /// <remarks/>
        public string eventId;
        
        /// <remarks/>
        public string puid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class sendMeetingRequestInvite {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attendee")]
        public userReference[] attendee;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sendMeetingBehaviorEnum behavior;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool behaviorSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(uninviteAttendeeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeInfoType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeBlueType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userReferenceCategorized))]
    public class userReference {
        
        /// <remarks/>
        public localizableString name;
        
        /// <remarks/>
        public string puid;
        
        /// <remarks/>
        public string email;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class uninviteAttendeeType : userReference {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool deleteAttendee;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deleteAttendeeSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeBlueType))]
    public class attendeeInfoType : userReference {
        
        /// <remarks/>
        public inviteTypeEnum inviteType;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum inviteTypeEnum {
        
        /// <remarks/>
        required,
        
        /// <remarks/>
        optional,
        
        /// <remarks/>
        resource,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeBlueType))]
    public class attendeeType : attendeeInfoType {
        
        /// <remarks/>
        public System.DateTime responseTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTimeSpecified;
        
        /// <remarks/>
        public attendeeAcceptEnum responseType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTypeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeStartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeStartTimeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeEndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeEndTimeSpecified;
        
        /// <remarks/>
        public string counterProposeLocation;
        
        /// <remarks/>
        public longText responseBody;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class attendeeBlueType : attendeeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class userReferenceCategorized : userReference {
        
        /// <remarks/>
        public catType cat;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class catType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string @ref;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum sendMeetingBehaviorEnum {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        @default,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class sendMeetingRequestUninvite {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attendee")]
        public uninviteAttendeeType[] attendee;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sendMeetingBehaviorEnum behavior;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool behaviorSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class sendMeetingRequest {
        
        /// <remarks/>
        public sendMeetingRequestUninvite uninvite;
        
        /// <remarks/>
        public replaceRequestType replaceRequest;
        
        /// <remarks/>
        public sendMeetingRequestInvite invite;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string eventId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool criticalChange;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool criticalChangeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime recurrenceId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recurrenceIdSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool continueOnFailure;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool deleteOnCompletion;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deleteOnCompletionSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class replaceRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("event", typeof(eventType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("body", typeof(bodyType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendeeEventExtra", typeof(attendeeEventExtraBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attachment", typeof(attachmentMetadataBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("reminder", typeof(reminderBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendee", typeof(attendeeBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrence", typeof(recurrenceType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("rule", typeof(recurrenceRuleType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("exception", typeof(modifiedExceptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("subscription", typeof(subscriptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cat", typeof(catType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(localizableString), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("startTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("endTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cuid", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("nextTriggerTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceId", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public redAttributeType[] attributes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public useClientIdsType useClientIds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useClientIdsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class eventType {
        
        /// <remarks/>
        public bodyType body;
        
        /// <remarks/>
        public attendeeEventExtraBlueType attendeeEventExtra;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachment")]
        public attachmentMetadataBlueType[] attachment;
        
        /// <remarks/>
        public reminderBlueType reminder;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attendee")]
        public attendeeBlueType[] attendee;
        
        /// <remarks/>
        public recurrenceType recurrence;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public calendarLocaleEnum calendarType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calendarTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int advanceHijriValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool advanceHijriValueSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class bodyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cat")]
        public catType[] cat;
        
        /// <remarks/>
        public localizableString title;
        
        /// <remarks/>
        public longText fullDescription;
        
        /// <remarks/>
        public localizableString location;
        
        /// <remarks/>
        public meetingStatusEnum meetingStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meetingStatusSpecified;
        
        /// <remarks/>
        public System.DateTime recurrenceId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recurrenceIdSpecified;
        
        /// <remarks/>
        public System.DateTime lastUpdateTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastUpdateTimeSpecified;
        
        /// <remarks/>
        public System.DateTime startTime;
        
        /// <remarks/>
        public System.DateTime endTime;
        
        /// <remarks/>
        public bool allDay;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allDaySpecified;
        
        /// <remarks/>
        public bool floating;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool floatingSpecified;
        
        /// <remarks/>
        public int travelTimeTo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool travelTimeToSpecified;
        
        /// <remarks/>
        public int travelTimeFrom;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool travelTimeFromSpecified;
        
        /// <remarks/>
        public freeBusyStatusType freeBusyStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool freeBusyStatusSpecified;
        
        /// <remarks/>
        public string cuid;
        
        /// <remarks/>
        public userReference organizer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum meetingStatusEnum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-sent")]
        notsent,
        
        /// <remarks/>
        sent,
        
        /// <remarks/>
        cancelled,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum freeBusyStatusType {
        
        /// <remarks/>
        free,
        
        /// <remarks/>
        busy,
        
        /// <remarks/>
        tentative,
        
        /// <remarks/>
        away,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class attendeeEventExtraBlueType : attendeeEventExtraType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attendeeEventExtraBlueType))]
    public class attendeeEventExtraType {
        
        /// <remarks/>
        public freeBusyStatusType intendedFreeBusy;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intendedFreeBusySpecified;
        
        /// <remarks/>
        public System.DateTime responseTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTimeSpecified;
        
        /// <remarks/>
        public attendeeAcceptEnum responseType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseTypeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeStartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeStartTimeSpecified;
        
        /// <remarks/>
        public System.DateTime counterProposeEndTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool counterProposeEndTimeSpecified;
        
        /// <remarks/>
        public string counterProposeLocation;
        
        /// <remarks/>
        public longText responseBody;
        
        /// <remarks/>
        public userReference delegateResponder;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class attachmentMetadataBlueType : attachmentMetadataType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attachmentMetadataBlueType))]
    public class attachmentMetadataType {
        
        /// <remarks/>
        public localizableString name;
        
        /// <remarks/>
        public string contentType;
        
        /// <remarks/>
        public string contentTransferEncoding;
        
        /// <remarks/>
        public System.UInt64 size;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] attachmentBody;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class recurrenceType {
        
        /// <remarks/>
        public recurrenceRuleType rule;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exception")]
        public modifiedExceptionType[] exception;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class recurrenceRuleType : recurrenceRuleBodyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recurrenceRuleType))]
    public class recurrenceRuleBodyType : recurrenceRuleBodyBaseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deletedExceptionDate")]
        public System.DateTime[] deletedExceptionDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recurrenceRuleBodyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recurrenceRuleType))]
    public class recurrenceRuleBodyBaseType {
        
        /// <remarks/>
        public System.DateTime creationDate;
        
        /// <remarks/>
        public dayOfWeekEnum firstDayOfWeek;
        
        /// <remarks/>
        public int tzid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tzidSpecified;
        
        /// <remarks/>
        public bool isLeapYear;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isLeapYearSpecified;
        
        /// <remarks/>
        public int leapMonthValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leapMonthValueSpecified;
        
        /// <remarks/>
        public repeatRuleType repeat;
        
        /// <remarks/>
        public System.DateTime windowEnd;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windowEndSpecified;
        
        /// <remarks/>
        public bool repeatForever;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool repeatForeverSpecified;
        
        /// <remarks/>
        public int repeatInstances;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool repeatInstancesSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum dayOfWeekEnum {
        
        /// <remarks/>
        su,
        
        /// <remarks/>
        mo,
        
        /// <remarks/>
        tu,
        
        /// <remarks/>
        we,
        
        /// <remarks/>
        th,
        
        /// <remarks/>
        fr,
        
        /// <remarks/>
        sa,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleType {
        
        /// <remarks/>
        public repeatRuleTypeDaily daily;
        
        /// <remarks/>
        public repeatRuleTypeWeekly weekly;
        
        /// <remarks/>
        public repeatRuleTypeMonthlyByDay monthlyByDay;
        
        /// <remarks/>
        public repeatRuleTypeMonthly monthly;
        
        /// <remarks/>
        public yearlyByDayType yearlyByDay;
        
        /// <remarks/>
        public repeatRuleTypeYearly yearly;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleTypeDaily {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int dayFrequency;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleTypeWeekly : weekDayAttributesType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int weekFrequency;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weekFrequencySpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(repeatRuleTypeMonthlyByDay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(repeatRuleTypeWeekly))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(yearlyByDayType))]
    public class weekDayAttributesType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool su;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool mo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool moSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool tu;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tuSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool we;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool th;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool fr;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool sa;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool saSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleTypeMonthlyByDay : weekDayAttributesType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int monthFrequency;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthFrequencySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public weekdayOfMonthEnum weekdayOfMonth;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum weekdayOfMonthEnum {
        
        /// <remarks/>
        first,
        
        /// <remarks/>
        second,
        
        /// <remarks/>
        third,
        
        /// <remarks/>
        fourth,
        
        /// <remarks/>
        last,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class yearlyByDayType : weekDayAttributesType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int yearFrequency;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yearFrequencySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public weekdayOfMonthEnum weekdayOfMonth;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int month;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleTypeMonthly {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int monthFrequency;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthFrequencySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int day;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool forceExact;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forceExactSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class repeatRuleTypeYearly {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int yearFrequency;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yearFrequencySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int month;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int day;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool forceExact;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forceExactSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class modifiedExceptionType {
        
        /// <remarks/>
        public System.DateTime recurrenceId;
        
        /// <remarks/>
        public modifiedExceptionTypeBody body;
        
        /// <remarks/>
        public attendeeEventExtraType attendeeEventExtra;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deletedAttendee")]
        public string[] deletedAttendee;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deletedAttachment")]
        public string[] deletedAttachment;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachment")]
        public attachmentMetadataType[] attachment;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attendee")]
        public attendeeType[] attendee;
        
        /// <remarks/>
        public reminderExceptionType reminder;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class modifiedExceptionTypeBody {
        
        /// <remarks/>
        public localizableString title;
        
        /// <remarks/>
        public longText fullDescription;
        
        /// <remarks/>
        public localizableString location;
        
        /// <remarks/>
        public System.DateTime startTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified;
        
        /// <remarks/>
        public System.DateTime endTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified;
        
        /// <remarks/>
        public bool allDay;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allDaySpecified;
        
        /// <remarks/>
        public int travelTimeTo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool travelTimeToSpecified;
        
        /// <remarks/>
        public int travelTimeFrom;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool travelTimeFromSpecified;
        
        /// <remarks/>
        public freeBusyStatusType freeBusyStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool freeBusyStatusSpecified;
        
        /// <remarks/>
        public userReference organizer;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class reminderExceptionType {
        
        /// <remarks/>
        public bool set;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool setSpecified;
        
        /// <remarks/>
        public int offset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsetSpecified;
        
        /// <remarks/>
        public int interruptability;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool interruptabilitySpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum calendarLocaleEnum {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item111,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class subscriptionType {
        
        /// <remarks/>
        public subscriptionTypeTrigger trigger;
        
        /// <remarks/>
        public System.DateTime expiresAt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiresAtSpecified;
        
        /// <remarks/>
        public subscriptionTypeContext context;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string to;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class subscriptionTypeTrigger {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public subscriptionTypeTriggerMode mode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string baseChangeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum subscriptionTypeTriggerMode {
        
        /// <remarks/>
        includeData,
        
        /// <remarks/>
        excludeData,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class subscriptionTypeContext {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string uri;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar", IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        attendeeEventExtra,
        
        /// <remarks/>
        attachment,
        
        /// <remarks/>
        reminder,
        
        /// <remarks/>
        attendee,
        
        /// <remarks/>
        recurrence,
        
        /// <remarks/>
        rule,
        
        /// <remarks/>
        exception,
        
        /// <remarks/>
        subscription,
        
        /// <remarks/>
        cat,
        
        /// <remarks/>
        title,
        
        /// <remarks/>
        startTime,
        
        /// <remarks/>
        endTime,
        
        /// <remarks/>
        cuid,
        
        /// <remarks/>
        email,
        
        /// <remarks/>
        nextTriggerTime,
        
        /// <remarks/>
        recurrenceId,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class redAttributeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum useClientIdsType {
        
        /// <remarks/>
        @true,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class freeOrBusyEventType {
        
        /// <remarks/>
        public System.DateTime startTime;
        
        /// <remarks/>
        public System.DateTime endTime;
        
        /// <remarks/>
        public string type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getFreeBusyDaysResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("freeOrBusyEvent")]
        public freeOrBusyEventType[] freeOrBusyEvent;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class recurrenceBaseType {
        
        /// <remarks/>
        public recurrenceRuleBodyBaseType rule;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getCalendarDaysResponseEvent {
        
        /// <remarks/>
        public bodyType body;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachment")]
        public attachmentMetadataType[] attachment;
        
        /// <remarks/>
        public reminderType reminder;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attendee")]
        public attendeeType[] attendee;
        
        /// <remarks/>
        public recurrenceBaseType recurrence;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public instanceTypeEnum instanceType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool instanceTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public System.Byte[] creator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public calendarLocaleEnum calendarType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calendarTypeSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int advanceHijriValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool advanceHijriValueSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public enum instanceTypeEnum {
        
        /// <remarks/>
        single,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("recurring-master")]
        recurringmaster,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("recurring-instance")]
        recurringinstance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("recurring-exception")]
        recurringexception,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getCalendarDaysResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("event")]
        public getCalendarDaysResponseEvent[] @event;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getQuickViewRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getFreeBusyDaysRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getCalendarDaysRequest))]
    public class domainStandardMethodParametersType {
        
        /// <remarks/>
        public calendarLocaleEnum calendarType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calendarTypeSpecified;
        
        /// <remarks/>
        public System.DateTime startTime;
        
        /// <remarks/>
        public System.DateTime endTime;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getQuickViewRequest : domainStandardMethodParametersType {
        
        /// <remarks/>
        public int tzid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tzidSpecified;
        
        /// <remarks/>
        public int biasOffset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool biasOffsetSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getFreeBusyDaysRequest : domainStandardMethodParametersType {
        
        /// <remarks/>
        public bool getFreeBlocks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool getFreeBlocksSpecified;
        
        /// <remarks/>
        public bool returnIndividualBlocks;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnIndividualBlocksSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class getCalendarDaysRequest : domainStandardMethodParametersType {
        
        /// <remarks/>
        public bool removeRecurrence;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removeRecurrenceSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deletedBlueType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseTypeChangeQueryResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changedBlue")]
        public System.Xml.XmlElement[] changedBlue;
        
        /// <remarks/>
        public deletedBlueType deletedBlue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string baseChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(myCalendar1))]
    public class myCalendarType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("event")]
        public eventType[] @event;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscription")]
        public subscriptionType[] subscription;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="myCalendar", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
    public class myCalendar1 : myCalendarType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string changeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string instanceId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseTypeXpQueryResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("myCalendar", typeof(myCalendar1), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("event", typeof(eventType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("body", typeof(bodyType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendeeEventExtra", typeof(attendeeEventExtraBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attachment", typeof(attachmentMetadataBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("reminder", typeof(reminderBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendee", typeof(attendeeBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrence", typeof(recurrenceType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("rule", typeof(recurrenceRuleType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("exception", typeof(modifiedExceptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("subscription", typeof(subscriptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cat", typeof(catType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(localizableString), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("startTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("endTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cuid", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("nextTriggerTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceId", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar", IncludeInSchema=false)]
    public enum ItemsChoiceType2 {
        
        /// <remarks/>
        myCalendar,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        attendeeEventExtra,
        
        /// <remarks/>
        attachment,
        
        /// <remarks/>
        reminder,
        
        /// <remarks/>
        attendee,
        
        /// <remarks/>
        recurrence,
        
        /// <remarks/>
        rule,
        
        /// <remarks/>
        exception,
        
        /// <remarks/>
        subscription,
        
        /// <remarks/>
        cat,
        
        /// <remarks/>
        title,
        
        /// <remarks/>
        startTime,
        
        /// <remarks/>
        endTime,
        
        /// <remarks/>
        cuid,
        
        /// <remarks/>
        email,
        
        /// <remarks/>
        nextTriggerTime,
        
        /// <remarks/>
        recurrenceId,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryResponseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xpQueryResponse")]
        public queryResponseTypeXpQueryResponse[] xpQueryResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changeQueryResponse")]
        public queryResponseTypeChangeQueryResponse[] changeQueryResponse;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class changeQueryType {
        
        /// <remarks/>
        public queryOptionsType options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string baseChangeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryOptionsType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sort")]
        public sortType[] sort;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("range")]
        public rangeType[] range;
        
        /// <remarks/>
        public shapeType shape;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class sortType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(sortTypeDirection.ascending)]
        public sortTypeDirection direction = sortTypeDirection.ascending;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string key;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum sortTypeDirection {
        
        /// <remarks/>
        ascending,
        
        /// <remarks/>
        descending,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class rangeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string first;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int count;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class shapeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public shapeAtomType[] include;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exclude")]
        public shapeAtomType[] exclude;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public shapeTypeBase @base;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class shapeAtomType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum shapeTypeBase {
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        nil,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class xpQueryType {
        
        /// <remarks/>
        public queryOptionsType options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class queryRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("xpQuery")]
        public xpQueryType[] xpQuery;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("changeQuery")]
        public changeQueryType[] changeQuery;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateResponseTypeUpdateBlockStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("insertResponse")]
        public insertResponse[] insertResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteResponse")]
        public deleteResponse[] deleteResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceResponse")]
        public replaceResponse[] replaceResponse;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class insertResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newBlueId")]
        public newBlueIdType[] newBlueId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class newBlueIdType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deleteResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class replaceResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newBlueId")]
        public newBlueIdType[] newBlueId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int selectedNodeCount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedNodeCountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public responseStatus status;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateResponseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("updateBlockStatus")]
        public updateResponseTypeUpdateBlockStatus[] updateBlockStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string newChangeNumber;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class updateBlockType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("insertRequest")]
        public insertRequestType[] insertRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteRequest")]
        public deleteRequestType[] deleteRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("replaceRequest")]
        public replaceRequestType[] replaceRequest;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public updateBlockTypeOnError onError;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class insertRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("event", typeof(eventType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("body", typeof(bodyType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendeeEventExtra", typeof(attendeeEventExtraBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attachment", typeof(attachmentMetadataBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("reminder", typeof(reminderBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("attendee", typeof(attendeeBlueType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrence", typeof(recurrenceType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("rule", typeof(recurrenceRuleType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("exception", typeof(modifiedExceptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("subscription", typeof(subscriptionType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cat", typeof(catType), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("title", typeof(localizableString), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("startTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("endTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("cuid", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("email", typeof(string), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("nextTriggerTime", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceId", typeof(System.DateTime), Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName", Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public redAttributeType[] attributes;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public useClientIdsType useClientIds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useClientIdsSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/myCalendar", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        attendeeEventExtra,
        
        /// <remarks/>
        attachment,
        
        /// <remarks/>
        reminder,
        
        /// <remarks/>
        attendee,
        
        /// <remarks/>
        recurrence,
        
        /// <remarks/>
        rule,
        
        /// <remarks/>
        exception,
        
        /// <remarks/>
        subscription,
        
        /// <remarks/>
        cat,
        
        /// <remarks/>
        title,
        
        /// <remarks/>
        startTime,
        
        /// <remarks/>
        endTime,
        
        /// <remarks/>
        cuid,
        
        /// <remarks/>
        email,
        
        /// <remarks/>
        nextTriggerTime,
        
        /// <remarks/>
        recurrenceId,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class deleteRequestType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("options")]
        public System.Xml.XmlElement[] options;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int minOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int maxOccurs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxOccursSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlNamespaceDeclarationsAttribute()]
        public System.Xml.Serialization.XmlSerializerNamespaces xmlns;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum updateBlockTypeOnError {
        
        /// <remarks/>
        rollbackBlockAndFail,
        
        /// <remarks/>
        rollbackBlockAndContinue,
        
        /// <remarks/>
        ignore,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class requestTypeKey {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string puid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string instance;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cluster;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public class identityType {
        
        /// <remarks/>
        public int kerberos;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    public class pathTypeFault {
        
        /// <remarks/>
        public int faultcode;
        
        /// <remarks/>
        public string faultreason;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string endpoint;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("at", DataType="anyURI", IsNullable=false)]
        public string[] found;
        
        /// <remarks/>
        public int maxsize;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxsizeSpecified;
        
        /// <remarks/>
        public int maxtime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxtimeSpecified;
        
        /// <remarks/>
        public int retryAfter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryAfterSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    public class viaChainTypeVia {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string vid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
        public string Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("response", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class responseType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string role;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/soap/security/2000-12")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.xmlsoap.org/soap/security/2000-12", IsNullable=false)]
    public class licenses : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
        public identityType identity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    [System.Xml.Serialization.XmlRootAttribute("request", Namespace="http://schemas.microsoft.com/hs/2001/10/core", IsNullable=false)]
    public class requestType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public requestTypeKey[] key;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string service;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public requestTypeDocument document;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string method;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public requestTypeGenResponse genResponse;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum requestTypeDocument {
        
        /// <remarks/>
        content,
        
        /// <remarks/>
        roleList,
        
        /// <remarks/>
        policy,
        
        /// <remarks/>
        system,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/hs/2001/10/core")]
    public enum requestTypeGenResponse {
        
        /// <remarks/>
        always,
        
        /// <remarks/>
        never,
        
        /// <remarks/>
        faultOnly,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/rp/")]
    [System.Xml.Serialization.XmlRootAttribute("path", Namespace="http://schemas.xmlsoap.org/rp/", IsNullable=false)]
    public class pathType : SoapHeader {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string action;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string to;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("via", IsNullable=false)]
        public viaChainTypeVia[] fwd;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("via", IsNullable=false)]
        public viaChainTypeVia[] rev;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string from;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string relatesTo;
        
        /// <remarks/>
        public pathTypeFault fault;
    }
}
